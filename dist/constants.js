const SimConstants = {"grammar":"anyCell\nstringCell\n highlightScope string\ncssCell\n highlightScope string\nhtmlCell\n highlightScope string\nemojiCell\n highlightScope string\nblankCell\ncodeCell\n highlightScope comment\ncommentCell\n highlightScope comment\nkeywordCell\n highlightScope keyword\ntextCell\n highlightScope string\nintegerCell\n highlightScope constant.numeric\nprobabilityCell\n description A number between 0 and 1\n highlightScope constant.numeric\npropertyNameCell\n highlightScope keyword\nangleCell\n enum North South East West NorthWest NorthEast SouthWest SouthEast\n highlightScope constant.numeric\nerrorNode\n baseNodeType errorNode\nsimojiNode\n extensions simoji\n description A Tree Language that compiles to a TreeComponentFramework app.\n root\n inScope blankLineNode commentNode abstractSetupNumberNode abstractDrawNode styleNode onTickNode\n catchAllNodeType agentNode\n compilesTo javascript\n javascript\n  compileAgentClassDeclarationsAndMap() {\n    const clone = this.clone()\n    clone.filter(node => node.getNodeTypeId() !== \"agentNode\").forEach(node => node.destroy())\n    clone.agentClassCount = 0\n    const compiled = clone.compile()\n    const agentMap = clone.agentTypes.map((node, index) => `\"${node.getWord(0)}\":simAgent${index}`).join(\",\")\n    return `${compiled}\n    const map = {${agentMap}};\n    map;`\n  }\n  compileSetup(rows, cols) {\n    const clone = this.clone()\n    clone.filter(node => node.getNodeTypeId() === \"agentNode\").forEach(node => node.destroy())\n    clone.positionSet = new Set()\n    clone.rows = rows\n    clone.cols = cols\n    return clone.compile()\n  }\n  get agentTypes() {\n    return this.filter(node => node.getNodeTypeId() === \"agentNode\")\n  }\nabstractDrawNode\ninsertNode\n extends abstractDrawNode\n cells keywordCell integerCell emojiCell\n crux insert\n javascript\n  compile() {\n    const {rows, cols, positionSet} = this.getParent()\n    let objects = parseInt(this.getWord(1))\n     let startBoard = []\n     let char = this.getWord(2)\n     while (objects) {\n       startBoard.push(`${char} ${yodash.getRandomLocation(rows, cols, positionSet)}`)\n       objects--\n     }\n     return startBoard.join(\"\\n\")\n  }\nrectangleDrawNode\n extends abstractDrawNode\n cells keywordCell emojiCell integerCell integerCell\n catchAllCellType integerCell\n crux rectangle\n javascript\n  compile() {\n    return yodash.makeRectangle(...yodash.parseInts(this.getWords().slice(1), 1))\n  }\npasteDrawNode\n extends abstractDrawNode\n cells keywordCell\n crux paste\n catchAllNodeType pasteLineNode\n javascript\n  compile() {\n    return this.childrenToString()\n  }\npasteLineNode\n catchAllCellType anyCell\n catchAllNodeType pasteLineNode\nagentNode\n inScope commentNode abstractEventNode abstractAttributeNode\n cells keywordCell\n compiler\n  stringTemplate \n javascript\n  compile() {\n    const root = this.getRootNode()\n    const name = `simAgent` + root.agentClassCount\n    root.agentClassCount++\n    const normal = super.compile()\n    return `class ${name} extends Agent {\n      ${normal}\n    }`\n  }\nabstractCommandNode\n cells keywordCell\nabstractSubjectObjectCommandNode\n extends abstractCommandNode\nspawnCommandNode\n crux spawn\n extends abstractCommandNode\n cells keywordCell emojiCell\nabstractAttributeNode\n cells keywordCell\nabstractStringAttributeNode\n extends abstractAttributeNode\n javascript\n  compile() {\n    return `${this.getWord(0)} = \"${this.getWord(1)}\"`\n  }\nabstractBooleanAttributeNode\n description A boolean attribute.\n extends abstractAttributeNode\n javascript\n  compile() {\n    return `${this.getWord(0)} = true`\n  }\nsolidTraitNode\n description If set other agents won't pass through these.\n extends abstractBooleanAttributeNode\n crux solid\nbouncyTraitNode\n description If set other agents will bounce off this after a collision.\n extends abstractBooleanAttributeNode\n crux bouncy\nabstractIntegerAttributeNode\n extends abstractAttributeNode\n description An integer attribute.\n cells keywordCell integerCell\n javascript\n  compile() {\n    return `${this.getWord(0)} = ${this.getWord(1)}`\n  }\ncustomIntegerAttributeNode\n pattern ^\\w+ \\d+$\n extends abstractIntegerAttributeNode\nhealthNode\n extends abstractIntegerAttributeNode\n crux health\nangleNode\n extends abstractStringAttributeNode\n cells keywordCell angleCell\n crux angle\nagentStyleNode\n description Provide custom CSS for an agent type.\n extends abstractStringAttributeNode\n cells keywordCell cssCell\n crux style\nagentHtmlNode\n description Provide custom HTML for each rendered agent.\n extends abstractStringAttributeNode\n cells keywordCell htmlCell\n crux html\nabstractSetupNumberNode\n cells keywordCell integerCell\n javascript\n  compile() {\n   return \"\"\n  }\nsizeNode\n description Size of the sim squares in pixels. Min is 10. Max is 200.\n extends abstractSetupNumberNode\n crux size\nticksPerSecondNode\n description Time in milliseconds of one step.\n extends abstractSetupNumberNode\n crux ticksPerSecond\nstyleNode\n description Optional CSS to load in BoardStyleComponent\n cells keywordCell\n crux style\n catchAllNodeType styleLineNode\n compiler\n  stringTemplate \nstyleLineNode\n catchAllCellType cssCell\n catchAllNodeType styleLineNode\ntargetEmojiNode\n inScope abstractCommandNode\n cells emojiCell\nabstractEventNode\n cells keywordCell\n javascript\n  compile() {\n    return ``\n  }\nabstractInteractionEventNode\n extends abstractEventNode\n catchAllNodeType targetEmojiNode\nonHitNode\n extends abstractInteractionEventNode\n crux onHit\n description Define what happens when this agent collides with other agents.\nonTouchNode\n extends abstractInteractionEventNode\n crux onTouch\n description Define what happens when this agent is adjacent to other agents.\nonDeathNode\n extends abstractEventNode\n crux onDeath\n inScope abstractCommandNode\n description Define what happens when this agent runs out of health.\nonTickNode\n extends abstractEventNode\n crux onTick\n inScope abstractCommandNode\n catchAllCellType probabilityCell\n description Define what happens each tick.\nreplaceWithCommandNode\n extends abstractSubjectObjectCommandNode\n crux replaceWith\n cells keywordCell emojiCell\nkickItCommandNode\n extends abstractSubjectObjectCommandNode\n crux kickIt\npickItUpCommandNode\n extends abstractSubjectObjectCommandNode\n crux pickItUp\nalertCommandNode\n extends abstractCommandNode\n crux alert\n catchAllCellType stringCell\nlogCommandNode\n extends abstractCommandNode\n crux log\n catchAllCellType stringCell\npauseCommandNode\n extends abstractCommandNode\n crux pause\ndecreaseCommandNode\n extends abstractCommandNode\n description Decrease a property by 1.\n crux decrease\n cells keywordCell propertyNameCell\nincreaseCommandNode\n extends abstractCommandNode\n description Increase a property by 1.\n crux increase\n cells keywordCell propertyNameCell\nturnRandomlyCommandNode\n extends abstractCommandNode\n crux turnRandomly\nturnTowardCommandNode\n description Turn to the closest agent of a certain type.\n extends abstractCommandNode\n crux turnToward\n cells keywordCell emojiCell\nturnFromCommandNode\n description Turn away from the closest agent of a certain type.\n extends abstractCommandNode\n crux turnFrom\n cells keywordCell emojiCell\ncommentNode\n catchAllCellType commentCell\n crux comment\n javascript\n  compile() {\n   return \"\"\n  }\n catchAllNodeType commentLineNode\niconNode\n crux icon\n cells keywordCell emojiCell\nblankLineNode\n description Blank lines compile do nothing.\n cells blankCell\n compiler\n  stringTemplate \n pattern ^$\n tags doNotSynthesize\ncommentLineNode\n catchAllCellType commentCell","examples":"covid19\n comment\n  See Also\n  - http://modelingcommons.org/browse/one_model/6282#model_tabs_browse_info\n  - https://github.com/maplerainresearch/covid19-sim-mesa/blob/master/model.py\n  - https://www.frontiersin.org/articles/10.3389/fpubh.2020.563247/full\n \n 🧟\n  health 100\n  onTick .03\n   log recovered\n   replaceWith 🦸‍♂️\n  onTick\n   decrease health\n   turnRandomly\n   move\n  onDeath\n   replaceWith 🪦\n \n 🦸‍♂️\n  comment immune\n  onTick\n   turnRandomly\n   move\n   move\n \n 🙍\n  onTick\n   turnRandomly\n   move\n   move\n  onTouch\n   🧟\n    replaceWith 🧟\n \n insert 1000 🙍\n insert 5 🦸‍♂️\n insert 5 🧟\n \n 🪦\n  comment Dead Person\n 💉\n \n size 15\n ticksPerSecond 10\n \n \nfire\n 🌲\n  onHit\n   ⚡️\n    replaceWith 🔥\n  onTouch\n   🔥\n    replaceWith 🔥\n \n ⚡️\n  health 10\n  onTick\n   decrease health\n  onDeath\n   remove\n \n 🔥\n  health 50\n  onTick\n   decrease health\n  onDeath\n   replaceWith ⬛️\n \n \n ⬛️\n  comment Burnt forest\n  html 🌲\n  style filter:grayscale(100%);\n \n \n insert 1500 🌲\n onTick .3\n  spawn ⚡️\nmoths\n comment\n  http://www.netlogoweb.org/launch#http://www.netlogoweb.org/assets/modelslib/Sample%20Models/Biology/Moths.nlogo\n \n 🦋\n  onTick .1\n   turnRandomly\n   move\n   move\n  onTick .2\n   turnToward 💡\n   move\n   move\n 💡\n \n ticksPerSecond 10\n size 20\n style\n  .BoardComponent {background:black;}\n \n insert 10 🦋\n insert 2 💡\npong\n 🏐\n  bouncy\n  onTick\n   move\n  angle West\n 🏓\n  angle East\n  onHit\n   🏐\n    kickIt\n 🏸\n  angle West\n  onHit\n   🏐\n    kickIt\n 🪵\n  solid\n \n size 20\n ticksPerSecond 10\n \n rectangle 🪵 30 15 5 5\n paste\n  🏓 13⬇️ 6➡️\n  🏸 13⬇️ 33➡️\n  🏐 13⬇️ 19➡️\n \n \nsoccer\n ⚽️\n  onHit\n   🥅\n    pause\n    alert GOAAAAAAAAALLLL!\n  bouncy\n \n ⛹️‍♂️\n  onTick\n   turnRandomly\n   move\n  onHit\n   ⚽️\n    kickIt\n \n ⛹️‍♀️\n  onTick\n   turnRandomly\n   move\n  onHit\n   ⚽️\n    kickIt\n 🥅\n 🪵\n  solid\n \n size 20\n ticksPerSecond 10\n \n rectangle 🪵 30 15 5 5\n paste\n  🥅 13⬇️ 6➡️\n  🥅 13⬇️ 33➡️\n  ⚽️ 13⬇️ 19➡️\n  ⛹️‍♂️ 13⬇️ 31➡️\n  ⛹️‍♂️ 17⬇️ 28➡️\n  ⛹️‍♂️ 13⬇️ 28➡️\n  ⛹️‍♂️ 8⬇️ 29➡️\n  ⛹️‍♂️ 8⬇️ 25➡️\n  ⛹️‍♂️ 10⬇️ 25➡️\n  ⛹️‍♂️ 13⬇️ 25➡️\n  ⛹️‍♂️ 17⬇️ 25➡️\n  ⛹️‍♂️ 17⬇️ 21➡️\n  ⛹️‍♂️ 8⬇️ 21➡️\n  ⛹️‍♂️ 13⬇️ 21➡️\n  ⛹️‍♀️ 13⬇️ 8➡️\n  ⛹️‍♀️ 9⬇️ 10➡️\n  ⛹️‍♀️ 13⬇️ 10➡️\n  ⛹️‍♀️ 17⬇️ 10➡️\n  ⛹️‍♀️ 17⬇️ 14➡️\n  ⛹️‍♀️ 13⬇️ 14➡️\n  ⛹️‍♀️ 10⬇️ 14➡️\n  ⛹️‍♀️ 8⬇️ 14➡️\n  ⛹️‍♀️ 13⬇️ 17➡️\n  ⛹️‍♀️ 17⬇️ 17➡️\n  ⛹️‍♀️ 8⬇️ 17➡️\n \nstartup-ideas\n 👨‍💼🔖\n  comment person with an idea\n  onTick\n   turnRandomly\n   move\n \n 👨‍💼💰\n  comment peron with an idea\n   that is making money\n  onTick\n   turnRandomly\n   move\n \n 👨‍\n  onTick .1\n   turnRandomly\n   move\n  onTick .1\n   turnToward 👨‍💼💰\n   move\n \n \n size 10\n insert 200 👨‍\n insert 30 👨‍💼🔖\n insert 3 👨‍💼💰\n \n \nzombies\n 🧱\n  solid\n \n 🔫\n  onTick .1\n   spawn 🪃\n \n 🪃\n  angle West\n  onTick\n   move\n \n 💣\n \n 🪦\n  comment Dead zombie\n \n 🧟‍♂️\n  onTick\n   turnRandomly\n   move\n  onHit\n   🪃\n    replaceWith 🪦\n   💣\n    replaceWith 🪦\n   👨‍👩‍👧‍👦\n    pause\n    alert TheyGotYou!\n 👨‍👩‍👧‍👦\n \n size 30\n ticksPerSecond 10\n \n insert 50 🧟‍♂️\n paste\n  👨‍👩‍👧‍👦 12⬇️ 11➡️"}