const SimConstants = {"grammar":"anyCell\nstringCell\n highlightScope string\nsettingValueCell\n highlightScope constant.numeric\ncssCell\n highlightScope string\njavascriptCell\n highlightScope string\nhtmlCell\n highlightScope string\nemojiCell\n highlightScope string\nohayoCell\n highlightScope string\nblankCell\ncodeCell\n highlightScope comment\ncommentCell\n highlightScope comment\nkeywordCell\n highlightScope keyword\ntextCell\n highlightScope string\nintegerCell\n highlightScope constant.numeric\nintegerOrPercentCell\n highlightScope constant.numeric\nprobabilityCell\n description A number between 0 and 1\n highlightScope constant.numeric\npropertyNameCell\n highlightScope keyword\nangleCell\n enum North South East West NorthWest NorthEast SouthWest SouthEast\n highlightScope constant.numeric\nerrorNode\n baseNodeType errorNode\nsimojiNode\n extensions simoji\n description A Tree Language that compiles to a TreeComponentFramework app.\n root\n inScope blankLineNode commentNode abstractSetupNumberNode abstractDrawNode styleNode onTickNode onExtinctNode reportNode experimentNode settingDefinitionNode\n catchAllNodeType agentNode\n compilesTo javascript\n example\n  🦋\n   onTick .1\n    turnRandomly\n    move\n   onTick .2\n    turnToward 💡\n    move\n  💡\n  \n  insert 10 🦋\n  insert 2 💡\n javascript\n  get agentTypes() {\n    return this.filter(node => node.getNodeTypeId() === \"agentNode\")\n  }\nexperimentNode\n crux experiment\n cells keywordCell\n inScope blankLineNode commentNode abstractSetupNumberNode abstractDrawNode styleNode onTickNode onExtinctNode reportNode settingDefinitionNode\n catchAllCellType stringCell\nabstractDrawNode\nfillNode\n description Fill all blank cells with this agent.\n extends abstractDrawNode\n cells keywordCell emojiCell\n crux fill\n javascript\n  compile() {\n    const {rows, cols, occupiedSpots, yodash} = this.getParent()\n     return yodash.fill(rows, cols, occupiedSpots, this.getWord(1))\n  }\ninsertNode\n extends abstractDrawNode\n cells keywordCell integerOrPercentCell emojiCell\n crux insert\n javascript\n  compile() {\n    const {rows, cols, occupiedSpots, randomNumberGenerator, yodash} = this.getParent()\n     return yodash.insertRandomAgents(randomNumberGenerator, this.getWord(1), this.getWord(2), rows, cols,  occupiedSpots)\n  }\ninsertClusterNode\n extends insertNode\n crux insertCluster\n catchAllCellType integerCell\n javascript\n  compile() {\n    const {rows, cols, occupiedSpots, randomNumberGenerator, yodash} = this.getParent()\n     return yodash.insertClusteredRandomAgents(randomNumberGenerator, parseInt(this.getWord(1)), this.getWord(2), rows, cols,  occupiedSpots, this.getWord(3), this.getWord(4))\n  }\nrectangleDrawNode\n extends abstractDrawNode\n cells keywordCell emojiCell integerCell integerCell\n catchAllCellType integerCell\n crux rectangle\n javascript\n  compile() {\n    const {yodash} = this.getParent()\n    return yodash.makeRectangle(...yodash.parseInts(this.getWords().slice(1), 1))\n  }\npasteDrawNode\n extends abstractDrawNode\n cells keywordCell\n crux paste\n catchAllNodeType pasteLineNode\n javascript\n  compile() {\n    const {yodash} = this.getParent()\n    const board = this.childrenToString()\n    yodash.updateOccupiedSpots(board, this.getParent().occupiedSpots)\n    return board\n  }\npasteLineNode\n catchAllCellType anyCell\n catchAllNodeType pasteLineNode\nagentNode\n inScope commentNode abstractEventNode abstractAttributeNode\n cells keywordCell\n catchAllNodeType errorNode\n compiler\n  stringTemplate \n javascript\n  compile() {\n    const root = this.getRootNode()\n    const name = root.agentKeywordMap[this.getWord(0)]\n    const normal = super.compile()\n    return `class ${name} extends Agent {\n      icon = \"${this.getWord(0)}\"\n      ${normal}\n    }`\n  }\nabstractCommandNode\n cells keywordCell\nabstractSubjectObjectCommandNode\n extends abstractCommandNode\nspawnCommandNode\n crux spawn\n extends abstractCommandNode\n cells keywordCell emojiCell\nremoveCommandNode\n description Remove this agent from the board.\n crux remove\n extends abstractCommandNode\n cells keywordCell\nabstractAttributeNode\n cells keywordCell\nabstractStringAttributeNode\n extends abstractAttributeNode\n pattern ^\\w+ .+$\n javascript\n  compile() {\n    return `${this.getWord(0)} = \"${this.getWord(1)}\"`\n  }\nabstractBooleanAttributeNode\n description A boolean attribute.\n extends abstractAttributeNode\n javascript\n  compile() {\n    return `${this.getWord(0)} = true`\n  }\nsolidTraitNode\n description If set other agents won't pass through these.\n extends abstractBooleanAttributeNode\n crux solid\nbouncyTraitNode\n description If set other agents will bounce off this after a collision.\n extends abstractBooleanAttributeNode\n crux bouncy\nabstractIntegerAttributeNode\n extends abstractAttributeNode\n description An integer attribute.\n cells keywordCell integerCell\n javascript\n  compile() {\n    return `${this.getWord(0)} = ${this.getWord(1)}`\n  }\ncustomIntegerAttributeNode\n pattern ^\\w+ \\d+$\n extends abstractIntegerAttributeNode\nsettingDefinitionNode\n description Define a configurable input.\n cells keywordCell settingValueCell\n pattern ^\\w+Setting .+$\nhealthNode\n extends abstractIntegerAttributeNode\n crux health\nangleNode\n extends abstractStringAttributeNode\n cells keywordCell angleCell\n crux angle\nagentStyleNode\n description Provide custom CSS for an agent type.\n extends abstractStringAttributeNode\n cells keywordCell cssCell\n crux style\nagentHtmlNode\n description Provide custom HTML for each rendered agent.\n extends abstractStringAttributeNode\n cells keywordCell htmlCell\n crux html\nabstractSetupNumberNode\n cells keywordCell integerCell\n javascript\n  compile() {\n   return \"\"\n  }\nsizeNode\n description Size of a grid cell in pixels. Min is 10. Max is 200.\n extends abstractSetupNumberNode\n crux size\nrowsNode\n description Number of rows in the grid. Default is based on screen size.\n extends abstractSetupNumberNode\n crux rows\ncolumnsNode\n description Number of columns in the grid. Default is based on screen size.\n extends abstractSetupNumberNode\n crux columns\nseedNode\n description If you'd like reproducible runs set a seed for the random number generator.\n extends abstractSetupNumberNode\n crux seed\nticksPerSecondNode\n description Time in milliseconds of one step.\n extends abstractSetupNumberNode\n crux ticksPerSecond\nreportNode\n crux report\n description Define a custom report template.\n catchAllNodeType ohayoLineNode\n cells keywordCell\n javascript\n  compile() {\n   return \"\"\n  }\nohayoLineNode\n description Data visualization code written for Ohayo.\n catchAllCellType ohayoCell\nstyleNode\n description Optional CSS to load in BoardStyleComponent\n cells keywordCell\n crux style\n catchAllNodeType styleLineNode\n javascript\n  compile() {\n   return \"\"\n  }\nstyleLineNode\n catchAllCellType cssCell\n catchAllNodeType styleLineNode\ntargetEmojiNode\n inScope abstractCommandNode\n cells emojiCell\nabstractEventNode\n cells keywordCell\n catchAllCellType probabilityCell\n javascript\n  compile() { return ``}\nabstractInteractionEventNode\n extends abstractEventNode\n catchAllNodeType targetEmojiNode\nonHitNode\n extends abstractInteractionEventNode\n crux onHit\n description Define what happens when this agent collides with other agents.\nonTouchNode\n extends abstractInteractionEventNode\n crux onTouch\n description Define what happens when this agent is adjacent to other agents.\nonDeathNode\n extends abstractEventNode\n crux onDeath\n inScope abstractCommandNode\n description Define what happens when this agent runs out of health.\nonTickNode\n extends abstractEventNode\n crux onTick\n inScope abstractCommandNode\n description Define what happens each tick.\nonExtinctNode\n crux onExtinct\n inScope abstractCommandNode\n cells keywordCell emojiCell\n description Define what happens when a type of agent goes extinct from the board.\n javascript\n  compile() { return \"\"}\nreplaceWithCommandNode\n extends abstractSubjectObjectCommandNode\n crux replaceWith\n cells keywordCell emojiCell\njavascriptCommandNode\n description An escape hatch so you can write custom javascript in a pinch.\n extends abstractCommandNode\n crux javascript\n catchAllNodeType javascriptLineNode\n cells keywordCell\nkickItCommandNode\n extends abstractSubjectObjectCommandNode\n crux kickIt\nshootCommandNode\n extends abstractSubjectObjectCommandNode\n crux shoot\npickItUpCommandNode\n extends abstractSubjectObjectCommandNode\n crux pickItUp\nalertCommandNode\n extends abstractCommandNode\n crux alert\n catchAllCellType stringCell\nlogCommandNode\n extends abstractCommandNode\n crux log\n catchAllCellType stringCell\nnarrateCommandNode\n extends abstractCommandNode\n crux narrate\n catchAllCellType stringCell\npauseCommandNode\n extends abstractCommandNode\n crux pause\ndecreaseCommandNode\n extends abstractCommandNode\n description Decrease a property by 1.\n crux decrease\n cells keywordCell propertyNameCell\nincreaseCommandNode\n extends abstractCommandNode\n description Increase a property by 1.\n crux increase\n cells keywordCell propertyNameCell\nmoveCommandNode\n extends abstractCommandNode\n crux move\nturnRandomlyCommandNode\n extends abstractCommandNode\n crux turnRandomly\nturnTowardCommandNode\n description Turn to the closest agent of a certain type.\n extends abstractCommandNode\n crux turnToward\n cells keywordCell emojiCell\nturnFromCommandNode\n description Turn away from the closest agent of a certain type.\n extends abstractCommandNode\n crux turnFrom\n cells keywordCell emojiCell\ncommentNode\n catchAllCellType commentCell\n crux comment\n javascript\n  compile() {\n   return \"\"\n  }\n catchAllNodeType commentLineNode\nblankLineNode\n description Blank lines compile do nothing.\n cells blankCell\n compiler\n  stringTemplate \n pattern ^$\n tags doNotSynthesize\ncommentLineNode\n catchAllCellType commentCell\njavascriptLineNode\n catchAllCellType javascriptCell","examples":"covid19\n 🧟\n  health 100\n  onTick .03\n   log recovered\n   replaceWith 🦸‍♂️\n  onTick\n   decrease health\n   turnRandomly\n   move\n  onDeath\n   replaceWith 🪦\n \n 🦸‍♂️\n  comment immune\n  onTick\n   turnRandomly\n   move\n \n 🙍\n  onTick\n   turnRandomly\n   move\n  onTouch\n   🧟\n    replaceWith 🧟\n \n insertCluster 100 🙍\n insertCluster 100 🙍\n insertCluster 100 🙍\n insertCluster 30 🙍\n insertCluster 30 🙍\n insertCluster 10 🙍\n \n insert 2 🧟\n \n onExtinct 🧟\n  log No more cases.\n  pause\n \n \n 🪦\n \n size 15\n ticksPerSecond 10\n \n report\n  roughjs.line\n  columns.keep 🧟\n   roughjs.line Active Cases\n  columns.keep 🪦\n   roughjs.line Cumulative Deaths\n \n \n comment\n  See Also\n  - http://covidsim.eu/\n  - http://modelingcommons.org/browse/one_model/6282#model_tabs_browse_info\n  - https://github.com/maplerainresearch/covid19-sim-mesa/blob/master/model.py\n  - https://www.frontiersin.org/articles/10.3389/fpubh.2020.563247/full\n  - https://ncase.me/covid-19/\n  - https://en.wikipedia.org/wiki/List_of_COVID-19_simulation_models\n  \nfire\n 🌲\n  onHit\n   ⚡️\n    replaceWith 🔥\n  onTouch\n   🔥\n    replaceWith 🔥\n \n ⚡️\n  health 10\n  onTick\n   decrease health\n  onDeath\n   remove\n \n 🔥\n  health 50\n  onTick\n   decrease health\n  onDeath\n   replaceWith ⬛️\n \n \n ⬛️\n  comment Burnt forest\n  html 🌲\n  style filter:grayscale(100%);\n \n \n insert 50% 🌲\n onTick .3\n  spawn ⚡️\nfireAdvanced\n treeDensitySetting 10%\n catchFireSetting .3\n fireSpreadSetting .7\n fireLifetimeSetting 10\n lightningFrequencySetting .1\n \n 🌲\n  onHit catchFireSetting\n   ⚡️\n    replaceWith 🔥\n  onTouch fireSpreadSetting\n   🔥\n    replaceWith 🔥\n \n ⚡️\n  health 10\n  onTick\n   decrease health\n  onDeath\n   remove\n \n 🔥\n  health fireLifetimeSetting\n  onTick\n   decrease health\n  onDeath\n   replaceWith ⬛️\n \n \n ⬛️\n  comment Burnt forest\n  html 🌲\n  style filter:grayscale(100%);\n \n \n insert treeDensitySetting 🌲\n onTick lightningFrequencySetting\n  spawn ⚡️\n \n experiment\n  treeDensitySetting 20%\n \n experiment\n  treeDensitySetting 40%\n \n experiment\n  treeDensitySetting 80%\n \ngameOfLife\n comment\n  Conway's Game of Life\n \n ⬛️\n  onTick\n   javascript\n    if (this.neighorCount[\"⬛️\"] === 2 || this.neighorCount[\"⬛️\"] === 3) {}\n    else this._replaceWith(\"◻️\")\n \n ◻️\n  onTick\n   javascript\n    if (this.neighorCount[\"⬛️\"] === 3) this._replaceWith(\"⬛️\")\n \n insert 10% ⬛️\n fill ◻️\n size 15\nmoths\n comment\n  http://www.netlogoweb.org/launch#http://www.netlogoweb.org/assets/modelslib/Sample%20Models/Biology/Moths.nlogo\n \n 🦋\n  onTick .1\n   turnRandomly\n   move\n   move\n  onTick .2\n   turnToward 💡\n   move\n   move\n 💡\n \n ticksPerSecond 10\n size 20\n style\n  .BoardComponent {background:black;}\n \n insert 10 🦋\n insert 2 💡\npong\n 🏐\n  bouncy\n  onTick\n   move\n  angle West\n 🏓\n  angle East\n  onHit\n   🏐\n    kickIt\n 🏸\n  angle West\n  onHit\n   🏐\n    kickIt\n 🪵\n  solid\n \n size 20\n ticksPerSecond 10\n \n rectangle 🪵 30 15 5 5\n paste\n  🏓 13⬇️ 6➡️\n  🏸 13⬇️ 33➡️\n  🏐 13⬇️ 19➡️\n \n \nsoccer\n ⚽️\n  onHit\n   🥅\n    pause\n    alert GOAAAAAAAAALLLL!\n  bouncy\n \n ⛹️‍♂️\n  onTick\n   turnRandomly\n   move\n  onHit\n   ⚽️\n    kickIt\n \n ⛹️‍♀️\n  onTick\n   turnRandomly\n   move\n  onHit\n   ⚽️\n    kickIt\n 🥅\n 🪵\n  solid\n \n size 20\n ticksPerSecond 10\n \n rectangle 🪵 30 15 5 5\n paste\n  🥅 13⬇️ 6➡️\n  🥅 13⬇️ 33➡️\n  ⚽️ 13⬇️ 19➡️\n  ⛹️‍♂️ 13⬇️ 31➡️\n  ⛹️‍♂️ 17⬇️ 28➡️\n  ⛹️‍♂️ 13⬇️ 28➡️\n  ⛹️‍♂️ 8⬇️ 29➡️\n  ⛹️‍♂️ 8⬇️ 25➡️\n  ⛹️‍♂️ 10⬇️ 25➡️\n  ⛹️‍♂️ 13⬇️ 25➡️\n  ⛹️‍♂️ 17⬇️ 25➡️\n  ⛹️‍♂️ 17⬇️ 21➡️\n  ⛹️‍♂️ 8⬇️ 21➡️\n  ⛹️‍♂️ 13⬇️ 21➡️\n  ⛹️‍♀️ 13⬇️ 8➡️\n  ⛹️‍♀️ 9⬇️ 10➡️\n  ⛹️‍♀️ 13⬇️ 10➡️\n  ⛹️‍♀️ 17⬇️ 10➡️\n  ⛹️‍♀️ 17⬇️ 14➡️\n  ⛹️‍♀️ 13⬇️ 14➡️\n  ⛹️‍♀️ 10⬇️ 14➡️\n  ⛹️‍♀️ 8⬇️ 14➡️\n  ⛹️‍♀️ 13⬇️ 17➡️\n  ⛹️‍♀️ 17⬇️ 17➡️\n  ⛹️‍♀️ 8⬇️ 17➡️\n \nstartupIdeas\n 👨‍💼🔖\n  comment person with an idea\n  onTick\n   turnRandomly\n   move\n \n 👨‍💼💰\n  comment peron with an idea\n   that is making money\n  onTick\n   turnRandomly\n   move\n \n 👨‍\n  onTick .1\n   turnRandomly\n   move\n  onTick .1\n   turnToward 👨‍💼💰\n   move\n \n \n size 10\n insert 200 👨‍\n insert 30 👨‍💼🔖\n insert 3 👨‍💼💰\n \n \nzombies\n 🧱\n  solid\n \n 🔫\n  onTick .1\n   spawn 🪃\n \n 🪃\n  angle West\n  onTick\n   move\n \n 💣\n \n 🪦\n  comment Dead zombie\n \n 🧟‍♂️\n  onTick\n   turnRandomly\n   move\n  onHit\n   🪃\n    replaceWith 🪦\n   💣\n    replaceWith 🪦\n   👨‍👩‍👧‍👦\n    pause\n    alert TheyGotYou!\n 👨‍👩‍👧‍👦\n \n size 30\n ticksPerSecond 10\n \n insertCluster 30 🧟‍♂️ 1 1\n paste\n  👨‍👩‍👧‍👦 12⬇️ 11➡️"}