title Simoji - Write simulations with Emojis

aftertext
 An early work in progress.

section Documentation

aftertext
 Check out the QuickStart Guide.
 link cheatSheet.html QuickStart Guide

section Related Work

list
 - Agent Based Modelling and Simulation tools: A review🔗www2.econ.iastate.edu/tesfatsi/ABMSoftwareReview.AbarEtAl2017.pdf of the state-of-art software
 - Comparison🔗en.wikipedia.org/wiki/Comparison_of_agent-based_modeling_software of agent-based modeling software
 - NetLogo🔗www.netlogoweb.org/launch#http://www.netlogoweb.org/assets/modelslib/Sample%20Models/Biology/Flocking%20Vee%20Formations.nlogo - 2D/3D, Web/Desktop, Open
 - GAMA🔗gama-platform.github.io
 - GAML🔗gama-platform.github.io/wiki/Introduction Language - Desktop, OpenSource
 - EmojiSimulator🔗ncase.me/sim/ - After shipping I learned Nicky had a similar idea 5+ years before me and executed very well!
 - InsightMaker🔗insightmaker.comSource
 - AnyLogic🔗www.anylogic.com - 2D/3D
 - SARL🔗en.wikipedia.org/wiki/SARL_language
 - Framsticks🔗www.framsticks.com/ - 3D, Desktop
 - Hash.ai🔗hash.ai
 - SOAR🔗en.wikipedia.org/wiki/Soar_(cognitive_architecture)
 - JADE🔗en.wikipedia.org/wiki/Java_Agent_Development_Framework
 - MASON🔗cs.gmu.edu/~eclab/projects/mason/
 - REPAST🔗repast.github.io
 - Simulations in Mathematica🔗demonstrations.wolfram.com/SugarscapeAgentBasedModeling/
 - Swarm🔗swarm.org/wiki/Swarm_main_page
 - Altreva🔗www.altreva.com
 - sandspiel🔗sandspiel.club
 - The-Powder-Toy🔗github.com/The-Powder-Toy/The-Powder-Toy

section Development

question What is the dev loop like?

1. Start the dev server with `node server.js`.
2. Open `localhost/dev.html`
3. Edit files
4. Refresh
5. Run tests with `npm test`
6. Build distribution with `./build.js`

section Roadmap

list
 - Run sims with 8x as many agents
 - Run 8x more sims at once
 - Write 8x more kinds of sims with the same number of words
 - Write models that are 8x less wrong
 - Generate 8x better distributables

section ❤️ Public Domain ❤️ 

skipIndexPage